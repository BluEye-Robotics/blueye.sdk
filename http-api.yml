openapi: '3.0.2'
info:
  title: Blueye HTTP API
  version: '1.0.0'
servers:
  - url: http://192.168.1.101/

paths:
  /diagnostics/drone_info:
    get:
      summary: Drone information
      description: |
        Returns a JSON string of drone information. Using this endpoint is the easiest way to check
        if there is a drone connected to your network.
      responses:
        '200':
          description: A JSON string of drone information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DroneInfo'
      x-code-samples:
        - lang: "curl"
          source: |
            curl -X GET "http://192.168.1.101/diagnostics/drone_info"

        - lang: "Python"
          source: |
            import requests
            response = requests.get("http://192.168.1.101/diagnostics/drone_info")
            print(response.json())

  /logcsv:
    get:
      summary: Array of logs
      description: |
        Returns an array of logs from the drone. Each array item represents an available log file on
        the drone. Use the /logcsv/{filename} endpoint to get the full log.

      responses:
        '200':
          description: Array of logs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Log'
      x-code-samples:
        - lang: "curl"
          source: |
            curl -X GET "http://192.168.1.101/logcsv"

        - lang: "Python"
          source: |
            import requests
            response = requests.get("http://192.168.1.101/logcsv")
            print(response.json())

  /logcsv/{filename}:
    get:
      summary: CSV log-file
      description: Downloads a comma-separated-value (CSV) log-file with the requested name.
      parameters:
        - name: filename
          in: path
          description: Filename of log to download
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Comma-separated-value file with log data
          content:
            text/csv:
              schema:
                type: string
      x-code-samples:
        - lang: "curl"
          source: |
            # To get log with filename ea9ac92e1817a1d4-00090.csv
            curl -X GET "http://192.168.1.101/logcsv/ea9ac92e1817a1d4-00090.csv"

        - lang: "Python"
          source: |
            import requests
            logname = "ea9ac92e1817a1d4-00090.csv"
            response = requests.get(f"http://192.168.1.101/logcsv/{logname}")
            with open(logname, "wb") as f:
              f.write(response.content)

components:
  schemas:
    DroneInfo:
      type: object
      properties:
        commit_id_csys:
          type: string
          description: Commit-id of the software currently running on the drone.
          example: "299238949a"
        features:
          type: string
          description: Comma-separated list of available features on the drone.
          example: "lasers,jetpack"
        hardware_id:
          type: string
          description: Unique hardware id of the built-in single board computer.
          example: ea9ac92e1817a1d4
        manufacturer:
          type: string
          example: "Blueye Robotics"
        model_description:
          type: string
          example: "Blueye Pioneer Underwater Drone"
        model_name:
          type: string
          example: "Blueye Pioneer"
        model_url:
          type: string
          example: "https://www.blueyerobotics.com"
        operating_system:
          type: string
          example: "blunux"
        serial_number:
          type: string
          description: Serial number for the whole drone package as it left the factory.
          example: "BYEDP123456"
        sw_version:
          type: string
          description: |
            Human-friendly name of software running on the drone.
            Format is $(Major).$(Minor).$(Build)-$(Yocto version)-$(Branch)
          example: "1.4.7-warrior-master"

    Log:
      type: object
      properties:
        name:
          type: string
          description: |
            Name of the logfile. First part is the drones unique id, second part is the dive count.
          example: ea9ac92e1817a1d4-00073.csv
        binsize:
          type: integer
          description: Size of the log file. Unit is bytes.
          example: 1099448
        timestamp:
          type: string
          description: Start time of the dive. Unit is ISO8601 datetime without timezone data.
          example: "2019-01-01T00:00:00.000001"
        maxdepth:
          type: number
          format: float
          description: Maximum depth reached during the dive. Unit is millimeters.
          example: 21050
